{"version":3,"sources":["components/components/skeleton.js","language.js","components/components/component/statuses.js","components/components/component/useStatus.js","components/components/component/status.js","components/components/useChildren.js","components/components/component/index.js","components/useDidMount.js","components/components/index.js","components/footer/index.js","components/header/index.js","components/incidents/incident/index.js","components/incidents/skeleton.js","components/incidents/index.js","components/status/statuses.js","components/status/useStatus.js","components/status/useRefetch.js","components/status/index.js","components/useIssues.js","components/App.js","serviceWorker.js","index.js"],"names":["styled","div","LocalizedStrings","strings","statuses","operational","name","locName","l10n","components","backgroundColour","performanceIssues","partialOutage","majorOutage","maintenance","processing","unknown","useStatus","labels","useState","status","setStatus","useEffect","Object","values","find","label","toLowerCase","Status","props","StatusCompound","className","replace","useChildren","component","children","setChildren","parentName","title","filter","v","splitName","split","length","Component","ComponentCompound","isCollapseOpen","setCollapseOpen","rawChildren","map","body","id","onClick","theme","collapse","content","isOpened","useDidMount","hasMounted","setHasMounted","ComponentList","loading","sort","a","b","localeCompare","error","nocomponents","Footer","Branding","visible","FooterCompound","process","href","rel","target","general","imprint","branding","Logo","h1","img","Header","HeaderCompound","src","alt","Incident","active","Details","Title","h3","Comment","Created","IncidentCompound","incident","closed_at","moment","created_at","format","toUpperCase","incidents","closed","Container","NoFound","IncidentList","noincidents","Statuses","message","issues","outage","getComponentLabelPercent","componentLabel","statusSet","c","l","useRefetch","refetch","updateTimeAgoDep","Date","localStorage","getItem","fromNow","timeAgo","setTimeAgo","interval","setInterval","clearInterval","StatusBar","h2","ReloadContainer","span","Reload","button","Code","code","hasError","JSON","stringify","errors","refresh","refreshing","fetchData","setLoading","setError","setResults","fetch","then","response","json","data","setItem","catch","toString","parse","useIssues","results","ComponentsContainer","ErrorContainer","ErrorTitle","MainPage","document","getElementsByTagName","setAttribute","getLanguage","componentsLoading","componentsError","componentsResults","componentsRefetch","incidentsLoading","incidentsError","incidentsResults","incidentsRefetch","FourZeroFour","notfound","description","link","App","path","exact","Boolean","window","location","hostname","match","processRelativeTime","number","withoutSuffix","key","isFuture","locale","months","monthsShort","weekdays","weekdaysShort","weekdaysMin","longDateFormat","LT","L","LL","LLL","LLLL","calendar","sameDay","sameElse","nextDay","nextWeek","lastDay","lastWeek","relativeTime","future","past","s","m","mm","h","hh","d","dd","M","MM","y","yy","ordinal","week","dow","doy","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.51428b72.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport default styled.div`\r\n  width: 100%;\r\n  height: 44px;\r\n  border-radius: 3px;\r\n\r\n  :not(:last-child) {\r\n    margin-bottom: 8px;\r\n  }\r\n`;","import LocalizedStrings from 'react-localization'\r\nimport strings from './strings.json'\r\n\r\nexport default new LocalizedStrings(strings)","import l10n from '../../../language'\r\n\r\nconst statuses = {\r\n  operational: {\r\n    name: \"Operational\",\r\n    locName: l10n.components.operational,\r\n    backgroundColour: \"rgba(104, 255, 55, 0.2)\",\r\n  },\r\n  performanceIssues: {\r\n    name: \"Performance Issues\",\r\n    locName: l10n.components.performanceIssues,\r\n    backgroundColour: \"rgba(78, 140, 255, 0.2)\",\r\n  },\r\n  partialOutage: {\r\n    name: \"Partial Outage\",\r\n    locName: l10n.components.partialOutage,\r\n    backgroundColour: \"rgba(255, 59, 20, 0.2)\",\r\n  },\r\n  majorOutage: {\r\n    name: \"Major Outage\",\r\n    locName: l10n.components.majorOutage,\r\n    backgroundColour: \"rgba(213, 0, 0, 0.2)\",\r\n  },\r\n  maintenance: {\r\n    name: \"Maintenance\",\r\n    locName: l10n.components.maintenance,\r\n    backgroundColour: \"rgba(128, 128, 128, 0.2)\",\r\n  },\r\n  processing: {\r\n    name: \"Processing\",\r\n    locName: l10n.components.processing,\r\n    backgroundColour: \"rgba(174, 50, 255, 0.2)\",\r\n  },\r\n  unknown: {\r\n    name: \"Unknown\",\r\n    locName: l10n.components.unknown,\r\n    backgroundColour: \"rgba(128, 128, 128, 0.2)\",\r\n  },\r\n\r\n};\r\n\r\nexport default statuses;","import { useState, useEffect } from \"react\";\r\nimport statuses from \"./statuses\";\r\n\r\nconst useStatus = (labels) => {\r\n  const [status, setStatus] = useState();\r\n\r\n  useEffect(() => {\r\n    setStatus(\r\n      Object.values(statuses).find((status) =>\r\n        labels.find((label) => label.name === status.name.toLowerCase())\r\n      )\r\n    );\r\n  }, [labels]);\r\n\r\n  if (!status) setStatus(statuses.unknown);\r\n\r\n  return [status];\r\n};\r\n\r\nexport default useStatus;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport useStatus from \"./useStatus\";\r\n\r\nconst Status = styled.div`\r\n  background-color: ${(props) => props.backgroundColour};\r\n  padding: 5px 12px;\r\n  border-radius: 16px;\r\n  font-size: 13px;\r\n  transition: 0.3s;\r\n`;\r\n\r\nconst StatusCompound = ({ labels }) => {\r\n  const [status] = useStatus(labels);\r\n\r\n  return (\r\n    <Status className={`component-status ${status?.name.toLowerCase().replace(' ', '')}`} backgroundColour={status?.backgroundColour}>\r\n      {status?.locName}\r\n    </Status>\r\n  );\r\n};\r\n\r\nexport default StatusCompound;","import { useEffect, useState } from \"react\";\r\n\r\nconst useChildren = (component, components) => {\r\n  const [children, setChildren] = useState();\r\n\r\n  useEffect(() => {\r\n    let parentName = component.title;\r\n    setChildren(\r\n      components.filter((v) => {\r\n        let splitName = v.title.split('/');\r\n        return v.labels.find((v) => v.name === 'subcomponent') && splitName.length > 0 && splitName[0] === parentName;\r\n      })\r\n    );\r\n  },  [component, components]);\r\n\r\n  return children;\r\n};\r\n\r\nexport default useChildren;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Status from \"./status\";\r\nimport Collapse from \"react-collapse\";\r\nimport useChildren from \"../useChildren\";\r\n\r\nconst Component = styled.div`\r\n  padding: 8px 16px;\r\n  border-radius: 3px;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  display: flex;\r\n  :not(:last-child) {\r\n    margin-bottom: 8px;\r\n  }\r\n`\r\n\r\nconst ComponentCompound = ({ component, components }) => {\r\n  const [isCollapseOpen, setCollapseOpen] = useState(false);\r\n  let rawChildren = useChildren(component, components);\r\n\r\n  if (component.labels.find((v) => v.name === 'subcomponent')) {\r\n    return null; // don't include subcomponents here\r\n  }\r\n\r\n  if (rawChildren?.length > 0 && !component.labels.find((v) => v.name === 'maintenance')) {\r\n    let children = rawChildren?.map((v) => <Component key={v.id} className=\"component collapsed\">\r\n      <div>\r\n        {v.title.split('/')[1]}\r\n        {v.body ?\r\n          <span className=\"component-body\">{v.body}</span>\r\n          : null\r\n        }\r\n      </div>\r\n      <Status labels={v.labels} />\r\n    </Component>);\r\n    return (<>\r\n      <Component onClick={() => setCollapseOpen(!isCollapseOpen)} className=\"component children\">\r\n        <div>\r\n          {component.title}\r\n          <span className=\"component-dropdown\">{isCollapseOpen ? \"►\" : \"▼\"}</span>\r\n          {component.body ?\r\n            <span className=\"component-body\">{component.body}</span>\r\n            : null\r\n          }\r\n        </div>\r\n        <Status labels={component.labels} />\r\n      </Component>\r\n      <Collapse theme={{ collapse: 'collapse-component', content: 'collapse-content' }} isOpened={isCollapseOpen}>\r\n        {children}\r\n      </Collapse>\r\n    </>);\r\n  }\r\n  return (\r\n    <Component className=\"component\">\r\n      <div>\r\n        {component.title}\r\n        {component.body ?\r\n          <span className=\"component-body\">{component.body}</span>\r\n          : null\r\n        }\r\n      </div>\r\n      <Status labels={component.labels} />\r\n    </Component>\r\n  );\r\n};\r\n\r\nexport default ComponentCompound;","import { useEffect, useState } from \"react\";\r\n\r\nconst useDidMount = () => {\r\n  const [hasMounted, setHasMounted] = useState();\r\n\r\n  useEffect(() => {\r\n    setHasMounted(true);\r\n  }, []);\r\n\r\n  return [hasMounted];\r\n};\r\n\r\nexport default useDidMount;","import React from \"react\";\r\nimport Skeleton from \"./skeleton\";\r\nimport Component from \"./component\";\r\nimport useDidMount from \"../useDidMount\";\r\nimport l10n from '../../language';\r\n\r\nconst ComponentList = ({ loading, components }) => {\r\n  const [hasMounted] = useDidMount();\r\n\r\n  return !loading || hasMounted ? (\r\n    components?.length > 0 ? (\r\n      components?.sort((a,b) => a.title.localeCompare(b.title)).map((component) => (\r\n        <Component key={component.id} component={component} components={components} />\r\n      ))\r\n    ) : (\r\n      <p>{l10n.error.nocomponents}</p>\r\n    )\r\n  ) : (\r\n    <>\r\n      <Skeleton />\r\n      <Skeleton />\r\n      <Skeleton />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ComponentList;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport l10n from \"../../language\";\r\n\r\nconst Footer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-top: 16px;\r\n`;\r\n\r\nconst Branding = styled.a`\r\n  font-size: 13px;\r\n  display: ${(props) => (props.visible ? \"block\" : \"none\")};\r\n`;\r\n\r\nconst FooterCompound = () => (\r\n  <Footer>\r\n    <Branding\r\n      visible={process.env.REACT_APP_BRANDING !== \"false\"}\r\n      href=\"https://oneliferp.net/terms\"\r\n      rel=\"noopener\"\r\n      target=\"_blank\"\r\n    >\r\n      {l10n.general.imprint}\r\n    </Branding>\r\n    <Branding\r\n      visible={process.env.REACT_APP_BRANDING !== \"false\"}\r\n      href=\"https://github.com/tadhglewis/issue-status\"\r\n      rel=\"noopener\"\r\n      target=\"_blank\"\r\n    >\r\n      {l10n.general.branding}\r\n    </Branding>\r\n  </Footer>\r\n);\r\n\r\nexport default FooterCompound;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Title = styled.h1`\r\n  text-align: center;\r\n  margin-top: 0;\r\n  margin-bottom: 0;\r\n`;\r\n\r\nconst Logo = styled.img``;\r\n\r\nconst Header = styled.div`\r\n  text-align: center;\r\n  margin-bottom: 16px;\r\n`;\r\n\r\nconst HeaderCompound = () =>\r\n  process.env.REACT_APP_LOGO || process.env.REACT_APP_NAME ? (\r\n    <Header className=\"app-header\">\r\n      {process.env.REACT_APP_LOGO ? (<>\r\n        <Logo\r\n          className=\"light-logo\"\r\n          src={process.env.REACT_APP_LOGO}\r\n          alt={process.env.REACT_APP_NAME}\r\n        />\r\n        <Logo\r\n          className=\"dark-logo\"\r\n          src={process.env.REACT_APP_DARK_LOGO}\r\n          alt={process.env.REACT_APP_NAME}\r\n        />\r\n      </>) : (\r\n        <Title>{process.env.REACT_APP_NAME}</Title>\r\n      )}\r\n    </Header>\r\n  ) : null;\r\n\r\nexport default HeaderCompound;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport moment from \"moment\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport l10n from '../../../language';\r\n\r\nconst Incident = styled.div`\r\n  transition: 0.3s;\r\n  border-left: 16px solid\r\n    ${(props) =>\r\n    props.active ? \"rgba(177, 177, 177,0.2)\" : \"rgba(255, 92, 20, 0.25)\"};\r\n  border-radius: 3px;\r\n  padding: 16px;\r\n  box-shadow: 0px 0px 33px -32px rgba(0, 0, 0, 0.75);\r\n  margin-top: 8px;\r\n\r\n  :not(:last-child) {\r\n    margin-bottom: 16px;\r\n  }\r\n`;\r\n\r\nconst Details = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 3px;\r\n`;\r\n\r\nconst Title = styled.h3`\r\n  margin-right: 16px;\r\n  font-weight: bold;\r\n  margin-bottom: 8px;\r\n  margin-top: 0;\r\n`;\r\n\r\nconst Comment = styled.div`\r\n  white-space: break-spaces;\r\n`;\r\n\r\nconst Status = styled.div`\r\n  background-color: ${(props) =>\r\n    props.active ? \"rgba(96, 96, 96, 0.1)\" : \"rgba(255, 92, 20, 0.1)\"};\r\n  padding: 5px 12px;\r\n  border-radius: 16px;\r\n  font-size: 13px;\r\n  transition: 0.3s;\r\n`;\r\n\r\nconst Created = styled.div`\r\n  font-size: 13px;\r\n  color: #6e6b6b;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst IncidentCompound = ({ incident }) => (\r\n  <Incident className=\"incident-container\" active={incident.closed_at}>\r\n    <Details>\r\n      <Created>\r\n        {moment(incident.created_at)\r\n          .format('LLL')\r\n          .toUpperCase()}\r\n      </Created>\r\n      <Status className={incident.closed_at ? 'incident-status' : 'activeIncident incident-status'} active={incident.closed_at}>\r\n        {incident.closed_at ? l10n.incidents.closed : l10n.incidents.active}\r\n      </Status>\r\n    </Details>\r\n    <Title>{incident.title}</Title>\r\n    <Comment>\r\n      <ReactMarkdown className=\"incident\" children={incident.body} />\r\n    </Comment>\r\n  </Incident>\r\n);\r\n\r\nexport default IncidentCompound;\r\n","import styled from \"styled-components\";\r\n\r\nexport default styled.div`\r\n  width: 100%;\r\n  height: 84px;\r\n  border-radius: 3px;\r\n  background-color: white;\r\n  box-shadow: 0px 0px 33px -32px rgba(0, 0, 0, 0.75);\r\n\r\n  :not(:last-child) {\r\n    margin-bottom: 8px;\r\n  }\r\n`;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Incident from \"./incident\";\r\nimport Skeleton from \"./skeleton\";\r\nimport useDidMount from \"../useDidMount\";\r\nimport l10n from '../../language';\r\n\r\nconst Container = styled.div`\r\n  margin: 32px auto 0 auto;\r\n  max-width: 1040px;\r\n`;\r\n\r\nconst Title = styled.div`\r\n  padding: 0 16px;\r\n  font-size: 20px;\r\n  margin-bottom: 16px;\r\n`;\r\n\r\nconst NoFound = styled.div`\r\n  margin: 0 8px;\r\n`;\r\n\r\nconst IncidentList = ({ loading, incidents }) => {\r\n  const [hasMounted] = useDidMount();\r\n\r\n  return (\r\n    <Container>\r\n      <Title>{l10n.incidents.title}</Title>\r\n      {!loading || hasMounted ? (\r\n        incidents?.length > 0 ? (\r\n          incidents?.map((incident) => (\r\n            <Incident key={incident.id} incident={incident} />\r\n          ))\r\n        ) : (\r\n          <NoFound>{l10n.error.noincidents}</NoFound>\r\n        )\r\n      ) : (\r\n        <>\r\n          <Skeleton className=\"incident-skeleton\" />\r\n          <Skeleton className=\"incident-skeleton\" />\r\n          <Skeleton className=\"incident-skeleton\" />\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default IncidentList;","import l10n from '../../language'\r\n\r\nconst Statuses = {\r\n  operational: {\r\n    message: l10n.status.operational,\r\n    name: 'operational'\r\n  },\r\n  issues: {\r\n    message: l10n.status.issues,\r\n    name: 'issues'\r\n  },\r\n  outage: {\r\n    message: l10n.status.outage,\r\n    name: 'outage'\r\n  },\r\n};\r\n\r\nexport default Statuses;","import { useState, useEffect } from \"react\";\r\nimport statuses from \"./statuses\";\r\n\r\nconst useStatus = (components) => {\r\n  const [status, setStatus] = useState();\r\n\r\n  useEffect(() => {\r\n    let statusSet = false;\r\n\r\n    if (getComponentLabelPercent(components, \"operational\" && \"processing\") < 100) {\r\n      setStatus(statuses.issues);\r\n      statusSet = true;\r\n    }\r\n\r\n    if (getComponentLabelPercent(components.filter((c) => !c.labels.find((l) => l.name === 'subcomponent')), \"major outage\") > 0) {\r\n      setStatus(statuses.outage);\r\n      statusSet = true;\r\n    }\r\n\r\n    if (!statusSet) setStatus(statuses.operational);\r\n  }, [components]);\r\n\r\n  return [status];\r\n};\r\n\r\nconst getComponentLabelPercent = (components, label) =>\r\n  (components.filter((component) =>\r\n    component.labels.find((componentLabel) => componentLabel.name === label)\r\n  ).length *\r\n    100) /\r\n  components.length;\r\n\r\nexport default useStatus;","import { useState, useEffect } from \"react\";\r\nimport moment from \"moment\";\r\n\r\nconst useRefetch = (refetch, updateTimeAgoDep) => {\r\n  const [timeAgo, setTimeAgo] = useState(\r\n    moment(\r\n      new Date(localStorage.getItem(`issueStatusLastFetchcomponent`))\r\n    ).fromNow()\r\n  );\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      if (\r\n        new Date(localStorage.getItem(`issueStatusLastFetchcomponent`)) <\r\n        new Date() - 240000\r\n      ) {\r\n        refetch(() => {\r\n          setTimeAgo(\r\n            moment(\r\n              new Date(localStorage.getItem(`issueStatusLastFetchcomponent`))\r\n            ).fromNow()\r\n          );\r\n        });\r\n      } else {\r\n        setTimeAgo(\r\n          moment(\r\n            new Date(localStorage.getItem(`issueStatusLastFetchcomponent`))\r\n          ).fromNow()\r\n        );\r\n      }\r\n    }, 1000);\r\n\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, [refetch]);\r\n\r\n  useEffect(() => {\r\n    setTimeAgo(\r\n      moment(\r\n        new Date(localStorage.getItem(`issueStatusLastFetchcomponent`))\r\n      ).fromNow()\r\n    );\r\n  }, [updateTimeAgoDep]);\r\n\r\n  return [timeAgo];\r\n};\r\n\r\nexport default useRefetch;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport useStatus from \"./useStatus\";\r\nimport useRefetch from \"./useRefetch\";\r\nimport l10n from '../../language';\r\n\r\nconst StatusBar = styled.div`\r\n  background-color: ${(props) =>\r\n    props.backgroundColour ? props.backgroundColour : \"#b1b1b1\"};\r\n  color: white;\r\n  padding: 16px;\r\n  border-radius: 3px;\r\n  margin-bottom: 32px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n  transition: 0.3s;\r\n`;\r\n\r\nconst Status = styled.h2`\r\n  font-size: 20px;\r\n  margin: 0;\r\n  font-weight: normal;\r\n`;\r\n\r\nconst ReloadContainer = styled.span`\r\n  background-color: transparent;\r\n  text-align: right;\r\n  padding: 0;\r\n  font-size: 13px;\r\n`;\r\n\r\nconst Reload = styled.button`\r\n  background-color: transparent;\r\n  color: white;\r\n  text-decoration: underline;\r\n  border: none;\r\n  cursor: pointer;\r\n  padding: 0;\r\n`;\r\n\r\nconst Code = styled.code`\r\n  white-space: pre-wrap;\r\n  display: block;\r\n`;\r\n\r\n// TODO: change all systems status based on current status of all components\r\nconst StatusCompound = ({ loading, error, components, refetch }) => {\r\n  const [status] = useStatus(components);\r\n  const [timeAgo] = useRefetch(refetch, loading);\r\n\r\n  return (\r\n    <>\r\n      {error.hasError && (\r\n        <Code>\r\n          <div>{l10n.error.message.title}</div>\r\n          <div>{l10n.error.message.body}</div>\r\n          {JSON.stringify(error.errors, null, 3)}\r\n        </Code>\r\n      )}\r\n      <StatusBar className={`status-bar ${status?.name}`} backgroundColour={status?.backgroundColour}>\r\n        <Status>{status?.message}</Status>\r\n        <ReloadContainer>{l10n.general.refresh}<Reload onClick={refetch}>{loading ? l10n.general.refreshing : timeAgo}</Reload></ReloadContainer>\r\n      </StatusBar>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StatusCompound;","import { useState, useEffect } from \"react\";\r\n\r\nconst useIssues = (label) => {\r\n  const [results, setResults] = useState([]);\r\n  const [error, setError] = useState();\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // GitHub rate limiting: 60 requests per hour/unauthenticated - fetches 15 times per hour / sending 30 requests (2 requests per fetch) and caches in localStorage\r\n    if (\r\n      new Date(localStorage.getItem(`issueStatusLastFetch${label}`)) <\r\n      new Date() - 240000\r\n    ) {\r\n      fetchData(setLoading, setError, setResults, label);\r\n    } else {\r\n      setResults(JSON.parse(localStorage.getItem(`issueStatus${label}`)));\r\n      setLoading(false);\r\n      setError();\r\n    }\r\n  }, [label]);\r\n\r\n  return [\r\n    loading,\r\n    error,\r\n    results || [],\r\n    () => fetchData(setLoading, setError, setResults, label),\r\n  ];\r\n};\r\n\r\nconst fetchData = (setLoading, setError, setResults, label) => {\r\n  setLoading(true);\r\n  fetch(\r\n    `https://api.github.com/repos/${process.env.REACT_APP_REPOSITORY}/issues?state=all&labels=issue status,${label}`\r\n  )\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .then((data) => {\r\n      setError();\r\n      localStorage.setItem(`issueStatusLastFetch${label}`, new Date());\r\n      localStorage.setItem(`issueStatus${label}`, JSON.stringify(data));\r\n      setResults(data);\r\n      setLoading(false);\r\n    })\r\n    .catch((error) => {\r\n      setError(error.toString());\r\n      localStorage.setItem(`issueStatusLastFetch${label}`, new Date());\r\n      setResults(JSON.parse(localStorage.getItem(`issueStatus${label}`)));\r\n      setLoading(false);\r\n    });\r\n};\r\n\r\nexport default useIssues;","import React from \"react\";\r\nimport { Route, BrowserRouter as Router, Switch } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport \"./App.css\";\r\nimport Components from \"./components\";\r\nimport Footer from \"./footer\";\r\nimport Header from \"./header\";\r\nimport Incidents from \"./incidents\";\r\nimport Status from \"./status\";\r\nimport useIssues from \"./useIssues\";\r\nimport l10n from '../language';\r\n\r\nconst Container = styled.div`\r\n  max-width: 1008px;\r\n  padding: 16px;\r\n  margin: 16px auto;\r\n`;\r\n\r\nconst ComponentsContainer = styled.div`\r\n  box-shadow: 0px 0px 33px -32px rgba(0, 0, 0, 0.75);\r\n  border-radius: 3px;\r\n  padding: 16px;\r\n`;\r\n\r\nconst ErrorContainer = styled.div`\r\n  text-align: center;\r\n  margin: 75px 0;\r\n`;\r\n\r\nconst ErrorTitle = styled.h1`\r\n  font-size: 42pt;\r\n  margin: 0;\r\n`;\r\n\r\nconst App = () => {\r\n  return (\r\n    <Container>\r\n      <Header />\r\n      <Router>\r\n        <Switch>\r\n          <Route path=\"/\" exact component={MainPage} />\r\n          <Route path=\"**\" component={FourZeroFour} />\r\n        </Switch>\r\n      </Router>\r\n      <Footer />\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst MainPage = () => {\r\n  // set html lang from l10n module\r\n  document.getElementsByTagName('html')[0].setAttribute('lang', l10n.getLanguage());\r\n  // loading, errors, results, refetch\r\n  const [\r\n    componentsLoading,\r\n    componentsError,\r\n    componentsResults,\r\n    componentsRefetch,\r\n  ] = useIssues(\"component\");\r\n  const [\r\n    incidentsLoading,\r\n    incidentsError,\r\n    incidentsResults,\r\n    incidentsRefetch,\r\n  ] = useIssues(\"incident\");\r\n\r\n  return (<>\r\n    <ComponentsContainer className=\"components-container\">\r\n      <Status\r\n        loading={componentsLoading || incidentsLoading}\r\n        error={{\r\n          hasError: componentsError || incidentsError,\r\n          errors: { componentsError, incidentsError },\r\n        }}\r\n        components={componentsResults}\r\n        refetch={() => {\r\n          componentsRefetch();\r\n          incidentsRefetch();\r\n        }}\r\n      />\r\n      <Components\r\n        loading={componentsLoading}\r\n        components={componentsResults}\r\n      />\r\n    </ComponentsContainer>\r\n    <Incidents loading={incidentsLoading} incidents={incidentsResults} />\r\n  </>);\r\n}\r\n\r\nconst FourZeroFour = () => {\r\n  return (<ErrorContainer>\r\n    <ErrorTitle>{l10n.error.notfound.title}</ErrorTitle>\r\n    <p>{l10n.error.notfound.description}</p>\r\n    <p><a href=\"/\">{l10n.error.notfound.link}</a></p>\r\n  </ErrorContainer>);\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./components/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport moment from \"moment\";\r\nimport l10n from './language';\r\n\r\nfunction processRelativeTime(number, withoutSuffix, key, isFuture) {\r\n  var format = {\r\n      'm': ['eine Minute', 'einer Minute'],\r\n      'h': ['eine Stunde', 'einer Stunde'],\r\n      'd': ['ein Tag', 'einem Tag'],\r\n      'dd': [number + ' Tage', number + ' Tagen'],\r\n      'M': ['ein Monat', 'einem Monat'],\r\n      'MM': [number + ' Monate', number + ' Monaten'],\r\n      'y': ['ein Jahr', 'einem Jahr'],\r\n      'yy': [number + ' Jahre', number + ' Jahren']\r\n  };\r\n  return withoutSuffix ? format[key][0] : format[key][1];\r\n}\r\nmoment.locale('de', {\r\n  months : \"Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember\".split(\"_\"),\r\n  monthsShort : \"Jan._Febr._Mrz._Apr._Mai_Jun._Jul._Aug._Sept._Okt._Nov._Dez.\".split(\"_\"),\r\n  weekdays : \"Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag\".split(\"_\"),\r\n  weekdaysShort : \"So._Mo._Di._Mi._Do._Fr._Sa.\".split(\"_\"),\r\n  weekdaysMin : \"So_Mo_Di_Mi_Do_Fr_Sa\".split(\"_\"),\r\n  longDateFormat : {\r\n      LT: \"HH:mm [Uhr]\",\r\n      L : \"DD.MM.YYYY\",\r\n      LL : \"D. MMMM YYYY\",\r\n      LLL : \"D. MMMM YYYY LT\",\r\n      LLLL : \"dddd, D. MMMM YYYY LT\"\r\n  },\r\n  calendar : {\r\n      sameDay: \"[Heute um] LT\",\r\n      sameElse: \"L\",\r\n      nextDay: '[Morgen um] LT',\r\n      nextWeek: 'dddd [um] LT',\r\n      lastDay: '[Gestern um] LT',\r\n      lastWeek: '[letzten] dddd [um] LT'\r\n  },\r\n  relativeTime : {\r\n      future : \"in %s\",\r\n      past : \"vor %s\",\r\n      s : \"ein paar Sekunden\",\r\n      m : processRelativeTime,\r\n      mm : \"%d Minuten\",\r\n      h : processRelativeTime,\r\n      hh : \"%d Stunden\",\r\n      d : processRelativeTime,\r\n      dd : processRelativeTime,\r\n      M : processRelativeTime,\r\n      MM : processRelativeTime,\r\n      y : processRelativeTime,\r\n      yy : processRelativeTime\r\n  },\r\n  ordinal : '%d.',\r\n  week : {\r\n      dow : 1, // Monday is the first day of the week.\r\n      doy : 4  // The week that contains Jan 4th is the first week of the year.\r\n  }\r\n});\r\nmoment.locale(l10n.getLanguage());\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}